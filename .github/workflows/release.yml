name: package and release

on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main

jobs:
    release:
        runs-on: ubuntu-latest
        env:
            NAME: "MCSCS"
        steps:
            - uses: actions/checkout@v4
            - name: 设置 Go 版本
              uses: actions/setup-go@v4
              with:
                  go-version: "1.22.3"
            - name: 获取版本
              id: version
              run: echo "VERSION=$(go run ${{ github.workspace }}/main.go --version)" >> $GITHUB_OUTPUT
            - name: 构建
              run: |
                  GOOS=linux GOARCH=amd64 go build -v -o ${{ github.workspace }}/${{ env.NAME }}-amd64 ${{ github.workspace }}/main.go
                  GOOS=linux GOARCH=386 go build -v -o ${{ github.workspace }}/${{ env.NAME }}-i386 ${{ github.workspace }}/main.go
                  GOOS=windows GOARCH=amd64 go build -v -o ${{ github.workspace }}/${{ env.NAME }}-amd64.exe ${{ github.workspace }}/main.go
                  GOOS=windows GOARCH=386 go build -v -o ${{ github.workspace }}/${{ env.NAME }}-i386.exe ${{ github.workspace }}/main.go
            - name: 测试
              run: go test -v ${{ github.workspace }}/...
            - name: 打包
              env:
                  VERSION: ${{ steps.version.outputs.VERSION }}
              run: |
                  tar -zcvf ${{ env.NAME }}-linux-amd64.tar.gz ${{ github.workspace }}/MCSCS-amd64 
                  tar -zcvf ${{ env.NAME }}-linux-i386.tar.gz ${{ github.workspace }}/MCSCS-i386 
                  zip -r ${{ env.NAME }}-windows-amd64.zip ${{ github.workspace }}/MCSCS-amd64.exe 
                  zip -r ${{ env.NAME }}-windows-i386.zip ${{ github.workspace }}/MCSCS-i386.exe
            - name: 上传发行版
              uses: softprops/action-gh-release@v2
              if: startsWith(github.ref, 'refs/tags/')
              with:
                  files: |
                      ${{ env.NAME }}-linux-amd64.tar.gz
                      ${{ env.NAME }}-linux-i386.tar.gz
                      ${{ env.NAME }}-windows-amd64.zip
                      ${{ env.NAME }}-windows-i386.zip
                  draft: true
